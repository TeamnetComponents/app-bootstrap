package ro.teamnet.bootstrap.web.filter;


import org.apache.commons.lang.StringUtils;

import javax.servlet.*;
import javax.servlet.http.HttpServletRequest;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * This filter is used in production, to serve static resources generated by "grunt build".
 * <p/>
 * <p>
 * It is configured to serve resources from the "dist" directory, which is the Grunt
 * destination directory.
 * </p>
 */
public class StaticResourcesProductionFilter implements Filter {

    public static final String FILTERED = "filtered";

    @Override
    public void init(FilterConfig filterConfig) throws ServletException {
        // Nothing to initialize
    }

    @Override
    public void destroy() {
        // Nothing to destroy
    }

    @Override
    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {
        HttpServletRequest httpRequest = (HttpServletRequest) request;
        String contextPath = ((HttpServletRequest) request).getContextPath();
        String requestURI = httpRequest.getRequestURI();
        requestURI = StringUtils.substringAfter(requestURI, contextPath);

        if (StringUtils.equals("/", requestURI)) {
            requestURI = "/index.html";
        }
//        String newURI = "/dist" + requestURI;
        boolean allReadyFiltered=false;
        if(request.getAttribute(FILTERED)!=null){
            @SuppressWarnings("unchecked") List<String> resourcesFilteredInRequest= (List<String>) request.getAttribute(FILTERED);
            allReadyFiltered=resourcesFilteredInRequest.contains(requestURI);
        }else{
            List<String> resourcesFilteredInRequest=new ArrayList<>();
            resourcesFilteredInRequest.add(requestURI);
            request.setAttribute(FILTERED,resourcesFilteredInRequest);
        }
        if(allReadyFiltered){
            chain.doFilter(request, response);
        }else{
            request.getRequestDispatcher(requestURI).forward(request, response);
        }
    }
}
